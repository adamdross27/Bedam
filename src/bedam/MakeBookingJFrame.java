/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bedam;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author benr0
 */
public class MakeBookingJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MakeBookingJFrame
     */
    public MakeBookingJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accomChoice = new javax.swing.JComboBox<>();
        bookingText = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        monthChoice = new javax.swing.JComboBox<>();
        dateChoice = new javax.swing.JComboBox<>();
        yearChoice = new javax.swing.JComboBox<>();
        accomLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        numOfNightsChoice = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        bedroomChoice = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        option1 = new javax.swing.JCheckBox();
        option2 = new javax.swing.JCheckBox();
        option3 = new javax.swing.JCheckBox();
        bathroomChoice = new javax.swing.JComboBox<>();
        showInvoiceButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        accomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Room", "Apartment", "House" }));
        accomChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accomChoiceActionPerformed(evt);
            }
        });

        bookingText.setText("accomodation text");
        bookingText.setVisible(false);

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Cambria", 0, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(172, 140, 71));
        titleLabel.setText("Make a Booking");
        titleLabel.setRequestFocusEnabled(false);

        monthChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "July", "August", "September", "October", "November", "December" }));
        monthChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthChoiceActionPerformed(evt);
            }
        });

        dateChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dateChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateChoiceActionPerformed(evt);
            }
        });

        yearChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2024" }));
        yearChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearChoiceActionPerformed(evt);
            }
        });

        accomLabel.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        accomLabel.setText("Accommodation Type:");

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setText("Check in date");

        numOfNightsChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setText("Number of Nights");

        bedroomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));

        jLabel3.setText("Bedrooms:");

        jLabel4.setText("Bathrooms");

        jLabel5.setText("Add Ons:");

        option1.setText("Warm Towels ($10)");
        option1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option1ActionPerformed(evt);
            }
        });

        option2.setText("Private Room ($45)");

        option3.setText("Air Conditioning ($20)");

        bathroomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));

        showInvoiceButton.setVisible(false);
        showInvoiceButton.setText("Show Invoice");
        showInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showInvoiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(232, 232, 232)
                .addComponent(jLabel5)
                .addGap(97, 97, 97))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(bookingText)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(96, 96, 96)
                            .addComponent(bedroomChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(158, 158, 158))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(accomChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(35, 35, 35)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showInvoiceButton)
                        .addGap(47, 47, 47))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(accomLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(349, 349, 349))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bathroomChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(193, 193, 193)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(option2)
                            .addComponent(option1)
                            .addComponent(option3))
                        .addGap(86, 86, 86))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(183, 183, 183)
                                .addComponent(jLabel1)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(yearChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(monthChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dateChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(numOfNightsChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(confirmButton))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(titleLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(accomLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accomChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(monthChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yearChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numOfNightsChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedroomChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(option1)
                    .addComponent(bathroomChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(option3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(bookingText)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton)
                    .addComponent(backButton)
                    .addComponent(showInvoiceButton))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accomChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accomChoiceActionPerformed
        // TODO add your handling code here:
        String choice = accomChoice.getSelectedItem().toString();
        if (choice.equals("Room")) {
            option1.setText("Warm Towels ($10)");
            option2.setText("Private Room ($45)");
            option3.setText("Air Conditioning ($20)");
            bathroomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1"}));
            bedroomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1"}));
        }
        if (choice.equals("Apartment")) {
            option1.setText("Laundry Access ($20)");
            option2.setText("Parking ($50)");
            option3.setText("Balcony ($30)");
            bathroomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1","2"}));
            bedroomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1","2","3"}));
        }
        if (choice.equals("House")) {
            option1.setText("Pool ($50)");
            option2.setText("Backyard ($15)");
            option3.setText("Garage Space ($20)");
            bathroomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1","2","3","4","5"}));
            bedroomChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1","2","3","4","5"}));
        }
    }//GEN-LAST:event_accomChoiceActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Are you sure", "Confirm Accomodation Type", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            //if yes:
            bookingText.setVisible(true);
            bookingText.setText("You have selected a " + accomChoice.getSelectedItem() + " Your check in date is: " + dateChoice.getSelectedItem() + " of " + monthChoice.getSelectedItem() + " " + yearChoice.getSelectedItem() + ". You will be staying for " + numOfNightsChoice.getSelectedItem() + " nights");
            showInvoiceButton.setVisible(true);
            confirmButton.setVisible(false);
            String bedroomStr = bedroomChoice.getSelectedItem().toString();
            String bathroomStr = bathroomChoice.getSelectedItem().toString();
            int bedroomNum = Integer.parseInt(bedroomStr);
            int bathroomNum = Integer.parseInt(bathroomStr);
            
            String locationStr = accomChoice.getSelectedItem().toString();
            int numNightsBooked = Integer.parseInt(numOfNightsChoice.getSelectedItem().toString());
            String year = yearChoice.getSelectedItem().toString();
            int monthNum = monthChoice.getSelectedIndex()+1;
            String month = "";
            if(yearChoice.getSelectedItem().toString().equals("2023"))
            {
                monthNum += 6;
            }
            if(monthNum<10)
            {
                month = "0"+monthNum;
            }
            else
            {
                month = monthNum+"";
            }
            String day = dateChoice.getSelectedItem().toString();
            
            String dateString = day+"-"+month+"-"+year;
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            
            LocalDate checkInDate = LocalDate.parse(dateString, formatter);
            LocalDate checkOutDate = checkInDate.plusDays(numNightsBooked);

            //checkOutDate = LocalDate.parse(dateString, formatter);
            checkOutDate = checkInDate.plusDays(numNightsBooked);
            Accommodation accom = new Accommodation(bedroomStr, bathroomStr) 
            {
                @Override
                public double calculateRentPerNight(int numOfNights) {
                    return 0;
                }

                @Override
                public void printDetails() {
                }
            };
            accom.setBathrooms(bathroomNum);
            accom.setBedrooms(bedroomNum);
            Booking booking = null;
//            try {
//                booking = new Booking(locationStr, accom, numNightsBooked, checkInDate, checkOutDate, Reader.readBookingNum());
//            } catch (IOException ex) {
//                Logger.getLogger(MakeBookingJFrame.class.getName()).log(Level.SEVERE, null, ex);
//            }

            
            
            try {
                booking = new Booking(locationStr, accom, numNightsBooked, checkInDate, checkOutDate, Reader.readBookingNum());
            } catch (IOException ex) {
                Logger.getLogger(MakeBookingJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            double rentPerNight = booking.getAccommodation().getRentPerNight() * numNightsBooked;
            accom.setRentPerNight(rentPerNight);
            
            if(locationStr.equalsIgnoreCase("room"))
            {
                Room.setHasTowels(option1.isSelected());
                Room.setIsPrivateRoom(option2.isSelected());
                Room.setHasAirConditioning(option3.isSelected());
            }
            else if(locationStr.equalsIgnoreCase("apartment"))
            {
                Apartment.setHasLaundry(option1.isSelected());
                Apartment.setHasParking(option2.isSelected());
                Apartment.setHasBalcony(option3.isSelected());
            }
            else if(locationStr.equalsIgnoreCase("house"))
            {
                House.setHasPool(option1.isSelected());
                House.setHasYard(option2.isSelected());
                House.setHasGarage(option3.isSelected());
            }
            
            BedamJFrame.main(null);
            MakeBookingJFrame.super.dispose();
            Writer.writeInvoice(booking, checkInDate, checkOutDate, numNightsBooked, accom);
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void monthChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthChoiceActionPerformed
        // TODO add your handling code here:
        String choice = monthChoice.getSelectedItem().toString();
        if ("January".equals(choice) || "March".equals(choice) || "May".equals(choice) || "July".equals(choice) || "August".equals(choice) || "October".equals(choice) || "December".equals(choice)) {
            dateChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));

        } else if ("February".equals(choice)) {
            dateChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));

        } else {
            dateChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"}));
        }
    }//GEN-LAST:event_monthChoiceActionPerformed

    private void dateChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChoiceActionPerformed

    private void yearChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearChoiceActionPerformed
        // TODO add your handling code here:
        String choice = yearChoice.getSelectedItem().toString();
        if (choice.equals("2023")) {
            monthChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"July", "August", "September", "October", "November", "December"}));
        } else {
            monthChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"}));
        }
    }//GEN-LAST:event_yearChoiceActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        BedamJFrame.main(null);
        MakeBookingJFrame.super.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void showInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showInvoiceButtonActionPerformed
        // TODO add your handling code here:
        File file = new File("./resources/invoice.txt");
        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            Logger.getLogger(MakeBookingJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_showInvoiceButtonActionPerformed

    private void option1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_option1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeBookingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeBookingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeBookingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeBookingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakeBookingJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accomChoice;
    private javax.swing.JLabel accomLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> bathroomChoice;
    private javax.swing.JComboBox<String> bedroomChoice;
    private javax.swing.JLabel bookingText;
    private javax.swing.JButton confirmButton;
    private javax.swing.JComboBox<String> dateChoice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> monthChoice;
    private javax.swing.JComboBox<String> numOfNightsChoice;
    private javax.swing.JCheckBox option1;
    private javax.swing.JCheckBox option2;
    private javax.swing.JCheckBox option3;
    private javax.swing.JButton showInvoiceButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JComboBox<String> yearChoice;
    // End of variables declaration//GEN-END:variables
}
